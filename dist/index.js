!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("colorette")):"function"==typeof define&&define.amd?define(["colorette"],e):(t="undefined"!=typeof globalThis?globalThis:t||self).index=e(t.colorette)}(this,(function(t){"use strict";return class{constructor(t,e,s={}){this.name=t,this.description=e,this.commands={},this.arguments={},this.argumentsAlias={},this.errors=[],this._ctx=null,this.argv=[],this.options=Object.assign({defaultArg:!0},s),this.options.defaultArg&&(this.addArgument("help",{alias:"h",description:"Prints help information",call({parser:t}){t.usage()}}),this.options.version&&this.addArgument("version",{alias:"v",description:"Print version info and exit",call({options:t,name:e}){console.info(`${e} ${t.version}`)}}))}addArgument(t,e={}){if(t in this.arguments)throw new Error(`duplicate options '${t}'`);if(e.alias&&1!=e.alias.length)throw new Error(`alias options '${e.alias}' need to be only one char`);e.params||(e.params=[]),e.name=t,this.arguments[t]=e}addCommand(t,e,s={}){if(t in this.commands)throw new Error(`Command '${t}' already set`);if(s.arguments)for(const t in s.arguments){const e=s.arguments[t];e.params||(e.params=[])}else s.arguments={};s.name=t,s.description=e,this.commands[t]=s}convertType(t,e){if(t===Number){const t=Number(e);if(Number.isNaN(t))throw new Error("nedd valid number.");return t}if(t!==Boolean)return e;switch(e){case"true":case"yes":return!0;case"false":case"no":return!1;default:throw new Error("boolean type, choise are 'true' or 'false'")}}advFlag(e,s,r,n,a){const o={params:[]},i=r[a];if(n[a]=o,i.alias&&(n[i.alias]=o),!i.params||!i.params.length)return s+1;let l=0;for(;l<i.params.length;l++){const r=i.params[l];if(s+l>=e.length){if(!("default"in r)){this.errors.push({text:`need ${t.yellow(i.params.length)} arguments after flag '${a}'.`,argvi:s+l});break}o.params.push(r.default)}else{const t=e[s+l];try{r.validator?o.params.push(r.validator(t)):this.convertType(r.type,t)}catch(t){this.errors.push({text:`invalid arugments for flag "${a}", ${t.toString()}`,argvi:s+l});break}}}return s+l}parseFlags(e,s,r=0){const n={},a=[],o={};for(const t in s){const e=s[t];if(void 0!==e.alias){if(e.alias in o)throw new Error(`duplicate alias options '${e.alias}`);o[e.alias]=s[t],o[e.alias].name=t}}let i=!1;const l=this.options.stopFlags;for(;r<e.length;){const h=e[r];if(h===l)i=!0,r++;else if(i||"-"!=h[0])a.push(h),r++;else if("-"==h[1])if(2!=h.length){const a=h.substring(2);a in s?r=this.advFlag(e,r,s,n,a):this.errors.push({text:`Found argument '${t.yellow(`--${a}`)}' which wasn't expected, or isn't valid in this context.`,argvi:r++,start:2,end:h.length-2})}else this.errors.push({text:`Empty argument '${t.yellow("--")}' which wasn't expected.`,argvi:r++,start:2,end:h.length-2});else if(1!=h.length){let a=r;for(let i=1;i<=h.length-1;i++)h[i]in o?a=this.advFlag(e,a,s,n,o[h[i]].name):this.errors.push({text:`Found argument '${t.yellow(`-${h[i]}`)}' which wasn't expected, or isn't valid in this context.`,argvi:r,start:i,end:1});r+=a===r?1:a}else this.errors.push({text:`Empty argument '${t.yellow("-")}' which wasn't expected.`,argvi:r++})}return[n,a]}parseCommand(e){var s;if(e[0]in this.commands){const t=this.commands[e[0]],s=Object.assign(Object.assign({},this.arguments),t.arguments);"help"in s&&(s.help.call=({parser:t,cmd:e})=>{e&&t.commandUsage(e)});const[r,n]=this.parseFlags(e,s,1);if(this.errors.length)return!1;const a=this._getCallFlag(r,s);return a?a(this._createContext(r,n,t)):t.call&&t.call(this._createContext(r,n,t)),!0}return"-"==e[0][0]?this.errors.push({text:`${null!==(s=this.name)&&void 0!==s?s:"programme"} need to start with command`}):this.errors.push({text:`no such subcommand: '${t.yellow(e[0])}''`,argvi:0}),!1}parseArguments(t){const[e,s]=this.parseFlags(t,this.arguments,0);if(this.errors.length)return!1;const r=this._getCallFlag(e,this.arguments);return r&&r(this._createContext(e,s)),!0}parse(t){return this.argv=t,0!=t.length?Object.keys(this.commands).length?this.parseCommand(t):this.parseArguments(t):(this.usage(),!0)}_getCallFlag(t,e){for(const s in t){const t=e[s].call;if(t)return t}return null}get context(){if(!this._ctx)throw new Error("You need to call 'parse' before access context");return this._ctx}_createContext(t,e,s=null){const r={flags:t,anyArgs:e,parser:this,name:this.name,description:this.description,options:this.options,argv:this.argv};return s&&(r.cmd=s),this._ctx=r,r}printError(e=null){const s=this.argv,r=s.join(" ")+"\n";let n=this.errors;null!==e&&(n=[...this.errors].splice(0,e));let a="";n.forEach((e=>{if(a+=`${t.red(t.bold("error"))}: ${e.text}\n`,void 0!==e.argvi){a+=r;let n=e.argvi;for(let t=0;t<e.argvi;t++)n+=s[t].length;const o=s[e.argvi].length;let i;if(null!=e.start&&null!=e.end){i=t.red("~".repeat(e.start))+t.red(t.bold("^".repeat(e.end)));const s=o-(e.start+e.end);s>0&&(i+=t.red("~".repeat(s)))}else i=t.red(t.bold("^".repeat(o)));a+=`${" ".repeat(n)}${i}\n`}})),this.errors.length>=5&&(a+=`total errors: ${t.red(t.bold(this.errors.length))}`),console.error(a)}formatOptions(e,s="Options:"){const r=Object.keys(e),n={},a=r.reduce(((t,s)=>{const r=e[s];return n[s]=s.length,r.params&&r.params.length&&(n[s]+=r.params.reduce(((t,e)=>t+e.type.constructor.name.length),0)),Math.max(t,n[s])}),0);let o=s+"\n";return r.forEach((s=>{var r;const i=e[s];o+=i.alias?`-${i.alias}, `:"    ",o+=`--${s} `,i.params&&(o+=i.params.reduce(((t,e)=>`${t}${e.type.constructor.name} `),"")),o+=" ".repeat(a-n[s]+1),o+=null!==(r=i.description)&&void 0!==r?r:t.italic("no information.")})),o}formatCommands(t){const e=Object.keys(t),s=e.reduce(((t,e)=>Math.max(t,e.length)),0);let r="";return e.forEach((e=>{r+=`  ${e}${" ".repeat(s-e.length)} ${t[e].description}\n`})),r}commandUsage(t){if("string"==typeof t){const e=this.commands[t];if(void 0===e)throw new Error(`'${t}' not found in commands`);t=e}let e="";e+=`Usage: ${this.name} ${t.name} `,this.options.info?e+=this.options.info:e+="[OPTIONS]\n\n",e+=t.description,this.arguments&&(e+="\n\n"+this.formatOptions(this.arguments,"Global options:")),t.arguments&&(e+="\n\n"+this.formatOptions(t.arguments,"Command options:")),this.options.footer&&(e+=`\n\n${this.options.footer}`),console.log(e)}usage(){let t="";const e=Object.keys(this.commands).length>0,s=Object.keys(this.arguments).length>0;t+=`Usage: ${this.name} `,this.options.info?t+=this.options.info:t+=`[OPTIONS] ${e?"COMMAND":""}\n\n`,t+=this.description,s&&(t+="\n\n"+this.formatOptions(this.arguments)),e&&(t+="\n\n"+this.formatCommands(this.commands)),this.options.footer&&(t+=`\n\n${this.options.footer}`),console.info(t)}}}));
