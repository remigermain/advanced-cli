!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("colorette")):"function"==typeof define&&define.amd?define(["colorette"],e):(t="undefined"!=typeof globalThis?globalThis:t||self).index=e(t.clc)}(this,(function(t){"use strict";function e(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var s=e(t);return class{constructor(t,e,s={}){this.name=t,this.description=e,this.commands={},this.arguments={},this.argumentsAlias={},this.argv=[],this.errors=[],this._ctx=null,this.options=Object.assign({defaultArg:!0},s),this.options.defaultArg&&(this.addArgument("help",{alias:"h",description:"Prints help information",call({parser:t}){t.usage()}}),this.options.version&&this.addArgument("version",{alias:"v",description:"Print version info and exit",call({options:t,name:e}){console.info(`${e} ${t.version}`)}}))}addArgument(t,e={}){if(t in this.arguments)throw new Error(`duplicate options '${t}'`);if(e.alias&&1!=e.alias.length)throw new Error(`alias options '${e.alias}' need to be only one char`);this.arguments[t]=e}addCommand(t,e){if(t in this.commands)throw new Error(`Command '${t}' already set`);e.arguments||(e.arguments={}),e.name=t,this.commands[t]=e}convertType(t,e){if(t===Number){const t=Number(e);if(Number.isNaN(t))throw new Error("nedd valid number.");return t}if(t!==Boolean)return e;switch(e){case"true":case"yes":return!0;case"false":case"no":return!1;default:throw new Error("boolean type, choise are 'true' or 'false'")}}advFlag(t,e,r,n,a){const o={params:[]},i=r[a];if(n[a]=o,i.alias&&(n[i.alias]=o),!i.params||!i.params.length)return e+1;let l=0;for(;l<i.params.length;l++){const r=i.params[l];if(e+l>=t.length){if(!("default"in r)){this.errors.push({text:`need ${s.default.yellow(i.params.length)} arguments after flag '${a}'.`,argvi:e+l});break}o.params.push(r.default)}else{const s=t[e+l];try{r.validator?o.params.push(r.validator(s)):this.convertType(r.type,s)}catch(t){this.errors.push({text:`invalid arugments for flag "${a}", ${t.toString()}`,argvi:e+l});break}}}return e+l}parseFlags(t,e,r=0){const n={},a=[],o={};for(const t in e){const s=e[t];if(void 0!==s.alias){if(s.alias in o)throw new Error(`duplicate alias options '${s.alias}`);o[s.alias]=e[t],o[s.alias].name=t}}let i=!1;const l=this.options.stopFlags;for(;r<t.length;){const h=t[r];if(h===l)i=!0,r++;else if(i||"-"!=h[0])a.push(h),r++;else if("-"==h[1])if(2!=h.length){const a=h.substring(2);a in e?r=this.advFlag(t,r,e,n,a):this.errors.push({text:`Found argument '${s.default.yellow(`--${a}`)}' which wasn't expected, or isn't valid in this context.`,argvi:r++,start:2,end:h.length-2})}else this.errors.push({text:`Empty argument '${s.default.yellow("--")}' which wasn't expected.`,argvi:r++,start:2,end:h.length-2});else if(1!=h.length){let a=r;for(let i=1;i<=h.length-1;i++)h[i]in o?a=this.advFlag(t,a,e,n,o[h[i]].name):this.errors.push({text:`Found argument '${s.default.yellow(`-${h[i]}`)}' which wasn't expected, or isn't valid in this context.`,argvi:r,start:i,end:1});r+=a===r?1:a}else this.errors.push({text:`Empty argument '${s.default.yellow("-")}' which wasn't expected.`,argvi:r++})}return[n,a]}parseCommand(t){var e;if(t[0]in this.commands){const e=this.commands[t[0]],s=Object.assign(Object.assign({},this.arguments),e.arguments);"help"in s&&(s.help.call=({parser:t,cmd:e})=>{e&&t.commandUsage(e)});const[r,n]=this.parseFlags(t,s,1);if(!this.errors.length)return this.printError(t),!1;const a=this._getCallFlag(r);a?a(this._createContext(r,n,e)):e.call&&e.call(this._createContext(r,n,e))}else"-"==t[0][0]?this.errors.push({text:`${null!==(e=this.name)&&void 0!==e?e:"programme"} need to start with command`}):this.errors.push({text:`no such subcommand: '${s.default.yellow(t[0])}''`,argvi:0});return this.printError(t),!1}parseArguments(t){const[e,s]=this.parseFlags(t,this.arguments,0);if(this.errors.length)return this.printError(t),!1;const r=this._getCallFlag(e);return r&&r(this._createContext(e,s)),!0}parse(t){return 0!=t.length?Object.keys(this.commands).length?this.parseCommand(t):this.parseArguments(t):(this.usage(),!0)}_getCallFlag(t){const e=Object.keys(t);for(let s=0;s<e.length;s++){const r=t[e[s]];if(r.call)return r.call}return null}get context(){if(!this._ctx)throw new Error("You need to call 'parse' before access context");return this._ctx}_createContext(t,e,s=null){const r={flags:t,anyArgs:e,parser:this,name:this.name,description:this.description,options:this.options};return s&&(r.cmd=s),this._ctx=r,r}printError(t){const e=t.join(" ")+"\n";let r=this.errors;this.options.maxError&&(r=[...this.errors].splice(0,this.options.maxError));let n="";r.forEach((r=>{if(n+=`${s.default.red(s.default.bold("error"))}: ${r.text}\n`,void 0!==r.argvi){n+=e;let a=r.argvi;for(let e=0;e<r.argvi;e++)a+=t[e].length;const o=t[r.argvi].length;let i;if(null!=r.start&&null!=r.end){i=s.default.red("~".repeat(r.start))+s.default.red(s.default.bold("^".repeat(r.end)));const t=o-(r.start+r.end);t>0&&(i+=s.default.red("~".repeat(t)))}else i=s.default.red(s.default.bold("^".repeat(o)));n+=`${" ".repeat(a)}${i}\n`}})),this.errors.length>=5&&(n+=`total errors: ${s.default.red(s.default.bold(this.errors.length))}`),console.error(n)}formatOptions(t,e="Options:"){const r=Object.keys(t),n={},a=r.reduce(((e,s)=>{const r=t[s];return n[s]=s.length,r.params&&r.params.length&&(n[s]+=r.params.reduce(((t,e)=>t+e.type.constructor.name.length),0)),Math.max(e,n[s])}),0);let o=e+"\n";return r.forEach((e=>{var r;const i=t[e];o+=i.alias?`-${i.alias}, `:"    ",o+=`--${e} `,i.params&&(o+=i.params.reduce(((t,e)=>`${t}${e.type.constructor.name} `),"")),o+=" ".repeat(a-n[e]+1),o+=null!==(r=i.description)&&void 0!==r?r:s.default.italic("no information.")})),o}formatCommands(t){const e=Object.keys(t),s=e.reduce(((t,e)=>Math.max(t,e.length)),0);let r="";return e.forEach((e=>{r+=`  ${e}${" ".repeat(s-e.length)} ${t[e].description}\n`})),r}commandUsage(t){if("string"==typeof t){const e=this.commands[t];if(void 0===e)throw new Error(`'${t}' not found in commands`);t=e}let e="";e+=`Usage: ${this.name} ${t.name} `,this.options.info?e+=this.options.info:e+="[OPTIONS]\n\n",e+=t.description,this.arguments&&(e+="\n\n"+this.formatOptions(this.arguments,"Global options:")),t.arguments&&(e+="\n\n"+this.formatOptions(t.arguments,"Command options:")),this.options.footer&&(e+=`\n\n${this.options.footer}`),console.log(e)}usage(){let t="";const e=Object.keys(this.commands).length>0,s=Object.keys(this.arguments).length>0;t+=`Usage: ${this.name} `,this.options.info?t+=this.options.info:t+=`[OPTIONS] ${e?"COMMAND":""}\n\n`,t+=this.description,s&&(t+="\n\n"+this.formatOptions(this.arguments)),e&&(t+="\n\n"+this.formatCommands(this.commands)),this.options.footer&&(t+=`\n\n${this.options.footer}`),console.log(t)}}}));
